apiVersion: batch/v1
kind: CronJob
metadata:
  name: update-mongo-user-password
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: cronjob-service-account  # Указываем сервисный аккаунт
          containers:
          - name: update-mongo-user
            image: bitnami/kubectl:latest
            command:
            - /bin/sh
            - -c
            - |
              MONGO_USER=$(kubectl get secret dev-mongo-credentials -n your-namespace -o=jsonpath='{.data.mongo-user}' | base64 --decode)
              MONGO_PASS=$(kubectl get secret dev-mongo-credentials -n your-namespace -o=jsonpath='{.data.mongo-password}' | base64 --decode)
              MONGO_HOST=$(kubectl get secret dev-mongo-credentials -n your-namespace -o=jsonpath='{.data.mongo-host}' | base64 --decode)
              MONGO_PORT=$(kubectl get secret dev-mongo-credentials -n your-namespace -o=jsonpath='{.data.mongo-port}' | base64 --decode)
              MONGO_DB="admin"  # База данных для авторизации

              NEW_USER="newUser"
              NEW_PASS="newPassword"
              
              echo "Подключаемся к MongoDB и изменяем пользователя и пароль..."
              kubectl run mongo-client --rm -it --restart='Never' \
                --image=mongo:latest --namespace=your-namespace \
                --command -- \
                mongo --host $MONGO_HOST --port $MONGO_PORT -u $MONGO_USER -p $MONGO_PASS --authenticationDatabase $MONGO_DB --eval "
                  db.changeUserPassword('$NEW_USER', '$NEW_PASS');
                  db.createUser({user: '$NEW_USER', pwd: '$NEW_PASS', roles: [{role: 'readWrite', db: 'your-database'}]});
                  exit();
                "
              
              echo "Обновляем Kubernetes секрет с новыми данными пользователя и пароля..."
              kubectl create secret generic dev-mongo-credentials \
                --from-literal=mongo-user=$NEW_USER \
                --from-literal=mongo-password=$NEW_PASS \
                --from-literal=mongo-host=$MONGO_HOST \
                --from-literal=mongo-port=$MONGO_PORT \
                --dry-run=client -o yaml | kubectl apply -f -

              echo "Перезапускаем приложение для применения новых данных..."
              kubectl rollout restart deployment/your-app-deployment --namespace=your-namespace

          restartPolicy: OnFailure

